---

#proxy_env - define this to use a proxy_env in the wget command where we install the Dell DSU repo

# Don't install the DSU Repo by default
dell_dsu_repo_install: False
# Update all firmware by default
dell_dsu_update_all_firmware: True
# Run check for Dell hardware
dell_dsu_assert: True
# Manage multipath.conf (will do so only if file exists and multipathd is active)
dell_dsu_manage_multipath_config: True

# rollout dell gpg keys - option 1
# the gpg keys are provided by the ansible role itself
dell_dsu_rollout_gpg_keys: True
dell_dsu_gpg_keys:
  - 0x756ba70b1019ced6.asc # gpg-pubkey-1019ced6-4e9cac25
  - 0x1285491434D8786F.asc # gpg-pubkey-34d8786f-4f512d86
  - 0xca77951d23b66a9d.asc # gpg-pubkey-23b66a9d-40912de4
  - 0x3CA66B4946770C59.asc # gpg-pubkey-46770c59-5ec55690
  - 0x274E9C32857A9594.asc # gpg-pubkey-857a9594-5ebb8b38

# rollout dell gpg keys - option 2
# the gpg keys are fetched by the dell repo installation script
# note that repo installation script is run only if dell_dsu_repo_install is set to True
dell_dsu_rollout_gpg_keys_from_dell_script: False

# Basic DSU arguments
dell_dsu_arguments_base: "--non-interactive --apply-upgrades"
# Exit codes documented on https://linux.dell.com/repo/hardware/dsu/
dell_dsu_changed_exit_codes:
  - 0 # Any successful operation performed by DSU
  - 8 # Reboot is required for the update to be completed successfully
dell_dsu_not_changed_exit_codes:
  - 34 # There were no updates found for the system.

firmware_components:
  SAS_Drive: AS
  BIOS: BI
  Chassis_System_Management: CE
  Drivers_OS_Deployment: DD
  Diagnostics: DI
  iDRAC: DR
  ESM: ES
  Fibre_Channel: FC
  Firmware: FW
  Memory: MM
  Network: NI
  Serial_ATA: SA
  SAS_Non_RAID: SE
  SAS_RAID: SF
  Systems_Management: SM 
  Storage: ST
  Tape_Drives: TH 
  Express_Flash_PCIe_SSD: XP
...
